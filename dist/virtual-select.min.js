/*!
 * Virtual Select v1.0.5
 * https://sa-si-dev.github.io/virtual-select
 * Licensed under MIT (https://github.com/sa-si-dev/virtual-select/blob/master/LICENSE)
 */(()=>{"use strict";var t={"./src/virtual-select.js":
/*!*******************************!*\
  !*** ./src/virtual-select.js ***!
  \*******************************/(t,e,i)=>{function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function o(t,e){var i;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(i=l(t))||e&&t&&"number"==typeof t.length){i&&(t=i);var s=0,o=function(){};return{s:o,n:function(){return s>=t.length?{done:!0}:{done:!1,value:t[s++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,a=!0,r=!1;return{s:function(){i=t[Symbol.iterator]()},n:function(){var t=i.next();return a=t.done,t},e:function(t){r=!0,n=t},f:function(){try{a||null==i.return||i.return()}finally{if(r)throw n}}}}function n(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||l(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(t,e){if(t){if("string"==typeof t)return a(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?a(t,e):void 0}}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,s=new Array(e);i<e;i++)s[i]=t[i];return s}function r(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}i.r(e),i.d(e,{VirtualSelect:()=>h});var u={13:"onEnterPress",27:"onEscPress",38:"onUpArrowPress",40:"onDownArrowPress"},h=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);try{this.setProps(e),this.setDisabledOptions(e.disabledOptions),this.setOptions(e.options),this.render(),this.addEvents(),this.setMethods(),e.selectedValue&&this.setValueMethod(e.selectedValue,this.silentInitialValueSet)}catch(t){console.warn("Couldn't initiate Virtual Select"),console.error(t)}}var e,i,l;return e=t,l=[{key:"init",value:function(e){var i=e.ele;if(i){var s=!1;if("string"!=typeof i||(i=document.querySelector(i))){void 0===i.length&&(i=[i],s=!0);var o=[];return i.forEach((function(i){e.ele=i,o.push(new t(e))})),s?o[0]:o}}}},{key:"closeAllDropbox",value:function(t){document.querySelectorAll(".vscomp-wrapper").forEach((function(e){t&&t===e||e.parentElement.virtualSelect.closeDropbox()}))}},{key:"resetForm",value:function(t){var e=t.target.closest("form");e&&e.querySelectorAll(".vscomp-wrapper").forEach((function(t){t.parentElement.virtualSelect.reset()}))}},{key:"reset",value:function(){this.virtualSelect.reset()}},{key:"setValueMethod",value:function(t,e){this.virtualSelect.setValueMethod(t,e)}},{key:"setOptionsMethod",value:function(t){this.virtualSelect.setOptionsMethod(t)}},{key:"setDisabledOptionsMethod",value:function(t){this.virtualSelect.setDisabledOptionsMethod(t)}},{key:"toggleSelectAll",value:function(t){this.virtualSelect.toggleAllOptions(t)}},{key:"isAllSelected",value:function(){return this.virtualSelect.isAllSelected}},{key:"addOptionMethod",value:function(t){this.virtualSelect.addOption(t,!0)}},{key:"getNewValueMethod",value:function(){return this.virtualSelect.getNewValue()}},{key:"version",value:function(){return"v1.0.5"}},{key:"getDisplayValueMethod",value:function(){return this.virtualSelect.getDisplayValue()}},{key:"openMethod",value:function(){return this.virtualSelect.openDropbox()}},{key:"closeMethod",value:function(){return this.virtualSelect.closeDropbox()}}],(i=[{key:"render",value:function(){if(this.$ele){var t="vscomp-wrapper",e=this.getTooltipAttrText("",!this.multiple,!0),i=this.getTooltipAttrText("Clear"),s=this.optionsHeight,o="",n={},l={"max-height":s},a={"z-index":this.zIndex};this.dropboxWidth&&(a.width=this.dropboxWidth),this.multiple&&(t+=" multiple",this.disableSelectAll||(t+=" has-select-all")),"top"===this.position&&(t+=" position-top"),this.hideClearButton||(t+=" has-clear-button"),this.required&&(o="required"),this.keepAlwaysOpen?(t+=" keep-always-open opened",l.height=s,n.height=s):t+=" closed";var r='<div class="'.concat(t,'" tabindex="0">\n        <input type="text" name="').concat(this.name,'" class="vscomp-hidden-input" ').concat(o,'>\n        <div class="vscomp-toggle-button">\n          <div class="vscomp-value" ').concat(e,">\n            ").concat(this.placeholder,'\n          </div>\n          <div class="vscomp-arrow"></div>\n          <div class="vscomp-clear-button toggle-button-child" ').concat(i,'>\n          </div>\n        </div>\n        <div class="vscomp-dropbox" ').concat(this.getStyleText(a),'>\n          <div class="vscomp-search-wrapper"></div>\n          <div class="vscomp-options-container" ').concat(this.getStyleText(l),'>\n            <div class="vscomp-options-list">\n              <div class="vscomp-options"></div>\n            </div>\n          </div>\n          <div class="vscomp-no-options" ').concat(this.getStyleText(n),">").concat(this.noOptionsText,'</div>\n          <div class="vscomp-no-search-results" ').concat(this.getStyleText(n),">").concat(this.noSearchResultsText,"</div>\n        </div>\n      </div>");this.$ele.innerHTML=r,this.$wrapper=this.$ele.querySelector(".vscomp-wrapper"),this.$toggleButton=this.$ele.querySelector(".vscomp-toggle-button"),this.$clearButton=this.$ele.querySelector(".vscomp-clear-button"),this.$dropbox=this.$ele.querySelector(".vscomp-dropbox"),this.$search=this.$ele.querySelector(".vscomp-search-wrapper"),this.$optionsContainer=this.$ele.querySelector(".vscomp-options-container"),this.$optionsList=this.$ele.querySelector(".vscomp-options-list"),this.$options=this.$ele.querySelector(".vscomp-options"),this.$valueText=this.$ele.querySelector(".vscomp-value"),this.$hiddenInput=this.$ele.querySelector(".vscomp-hidden-input"),this.$ele.setAttribute("name",this.name),this.addClass(this.$ele,"vscomp-ele"),this.renderSearch(),this.setOptionsHeight(),this.setVisibleOptions()}}},{key:"renderOptions",value:function(){var t,e=this,i="",s=this.getVisibleOptions(),o="",n="",l=!(!this.markSearchResults||!this.searchValue),a=this.getStyleText({height:this.optionHeight+"px"});if(l&&(t=new RegExp("(".concat(this.searchValue,")"),"gi")),this.multiple&&(o='<span class="checkbox-icon"></span>'),this.allowNewOption){var r=this.getTooltipAttrText("New Option");n='<span class="vscomp-new-option-icon" '.concat(r,"></span>")}s.forEach((function(s){var r=s.label,u="vscomp-option",h=e.getTooltipAttrText("",!0),c=o,p="",d="";s.isFocused&&(u+=" focused"),s.isDisabled&&(u+=" disabled"),s.isGroupTitle?(u+=" group-title",c=""):s.isSelected&&(u+=" selected"),s.isGroupOption&&(u+=" group-option"),s.description&&(d='<div class="vscomp-option-description" '.concat(h,">").concat(s.description,"</div>")),s.isCurrentNew?(u+=" current-new",p+=n):l&&!s.isGroupTitle&&(r=r.replace(t,"<mark>$1</mark>")),i+='<div class="'.concat(u,'" data-value="').concat(s.value,'" data-index="').concat(s.index,'" data-visible-index="').concat(s.visibleIndex,'" ').concat(a,">\n          ").concat(c,'\n          <span class="vscomp-option-text" ').concat(h,">\n            ").concat(r,"\n          </span>\n          ").concat(d,"\n          ").concat(p,"\n        </div>")})),this.$options.innerHTML=i;var u=!this.options.length,h=!u&&!s.length;this.allowNewOption||this.toggleClass(this.$wrapper,"has-no-search-results",h),this.toggleClass(this.$wrapper,"has-no-options",u),this.setOptionsPosition(),this.setOptionsTooltip(),this.moveFocusedOptionToView()}},{key:"renderSearch",value:function(){if(this.hasSearch){var t="";this.multiple&&!this.disableSelectAll&&(t='<span class="checkbox-icon toggle-all-options"></span>');var e='<div class="vscomp-search-container">\n        '.concat(t,'\n        <input type="text" class="vscomp-search-input" placeholder="Search...">\n        <span class="vscomp-search-clear">&times;</span>\n      </div>');this.$search.innerHTML=e,this.$searchInput=this.$ele.querySelector(".vscomp-search-input"),this.$searchClear=this.$ele.querySelector(".vscomp-search-clear"),this.$toggleAllOptions=this.$ele.querySelector(".toggle-all-options"),this.searchFromApi||this.addEvent(this.$searchInput,"keyup change","onSearch"),this.addEvent(this.$searchClear,"click","onSearchClear"),this.addEvent(this.$toggleAllOptions,"click","onToggleAllOptions")}}},{key:"addEvents",value:function(){this.addEvent(document,"click","onDocumentClick"),this.addEvent(this.$wrapper,"keydown","onKeyDown"),this.addEvent(this.$toggleButton,"click","onToggleButtonClick"),this.addEvent(this.$clearButton,"click","onClearButtonClick"),this.addEvent(this.$optionsContainer,"scroll","onOptionsScroll"),this.addEvent(this.$options,"click","onOptionsClick"),this.addEvent(this.$options,"mouseover","onOptionsMouseOver"),this.addEvent(this.$options,"touchmove","onOptionsTouchMove")}},{key:"addEvent",value:function(t,e,i){var s=this;t&&(e=this.removeArrayEmpty(e.split(" "))).forEach((function(e){var o="".concat(i,"-").concat(e),n=s.events[o];n||(n=s[i].bind(s),s.events[o]=n),(t=s.getElements(t)).forEach((function(t){t.addEventListener(e,n)}))}))}},{key:"dispatchEvent",value:function(t,e){t&&(t=this.getElements(t),setTimeout((function(){t.forEach((function(t){t.dispatchEvent(new Event(e,{bubbles:!0}))}))}),0))}},{key:"onDocumentClick",value:function(e){t.closeAllDropbox(e.target.closest(".vscomp-wrapper"))}},{key:"onKeyDown",value:function(t){var e=t.which||t.keyCode,i=u[e];i&&this[i](t)}},{key:"onEnterPress",value:function(){this.isOpened()?this.selectFocusedOption():this.openDropbox()}},{key:"onEscPress",value:function(){this.isOpened()&&this.closeDropbox()}},{key:"onDownArrowPress",value:function(t){t.preventDefault(),this.isOpened()?this.focusOption("next"):this.openDropbox()}},{key:"onUpArrowPress",value:function(t){t.preventDefault(),this.isOpened()?this.focusOption("previous"):this.openDropbox()}},{key:"onToggleButtonClick",value:function(t){t.target.closest(".toggle-button-child")||this.toggleDropbox()}},{key:"onClearButtonClick",value:function(){this.reset()}},{key:"onOptionsScroll",value:function(){this.setVisibleOptions()}},{key:"onOptionsClick",value:function(t){this.selectOption(t.target.closest(".vscomp-option:not(.disabled):not(.group-title)"))}},{key:"onOptionsMouseOver",value:function(t){var e=t.target.closest(".vscomp-option:not(.disabled):not(.group-title)");e&&this.focusOption(null,e)}},{key:"onOptionsTouchMove",value:function(){this.removeOptionFocus()}},{key:"onSearch",value:function(t){t.stopPropagation(),this.setSearchValue(t.target.value,!0)}},{key:"onSearchClear",value:function(){this.setSearchValue(""),this.focusSearchInput()}},{key:"onToggleAllOptions",value:function(){this.toggleAllOptions()}},{key:"setProps",value:function(t){t=this.setDefaultProps(t),this.setPropsFromElementAttr(t),this.$ele=t.ele,this.valueKey=t.valueKey,this.labelKey=t.labelKey,this.descriptionKey=t.descriptionKey,this.aliasKey=t.aliasKey,this.optionsCount=parseInt(t.optionsCount),this.halfOptionsCount=Math.ceil(this.optionsCount/2),this.optionHeightText=t.optionHeight,this.optionHeight=parseFloat(this.optionHeightText),this.multiple=this.convertToBoolean(t.multiple),this.hasSearch=this.convertToBoolean(t.search),this.hideClearButton=this.convertToBoolean(t.hideClearButton),this.hasOptionDescription=this.convertToBoolean(t.hasOptionDescription),this.silentInitialValueSet=this.convertToBoolean(t.silentInitialValueSet),this.allowNewOption=this.convertToBoolean(t.allowNewOption),this.markSearchResults=this.convertToBoolean(t.markSearchResults),this.showSelectedOptionsFirst=this.convertToBoolean(t.showSelectedOptionsFirst),this.disableSelectAll=this.convertToBoolean(t.disableSelectAll),this.keepAlwaysOpen=this.convertToBoolean(t.keepAlwaysOpen),this.noOptionsText=t.noOptionsText,this.noSearchResultsText=t.noSearchResultsText,this.placeholder=t.placeholder,this.position=t.position,this.dropboxWidth=t.dropboxWidth,this.tooltipFontSize=t.tooltipFontSize,this.tooltipAlignment=t.tooltipAlignment,this.tooltipMaxWidth=t.tooltipMaxWidth,this.noOfDisplayValues=parseInt(t.noOfDisplayValues),this.zIndex=parseInt(t.zIndex),this.maxValues=parseInt(t.maxValues),this.name=t.name,this.selectedValues=[],this.newValues=[],this.events={},this.tooltipEnterDelay=200,this.transitionDuration=250,this.searchValue="",this.searchValueOriginal="",this.isAllSelected=!1,this.isShowAllSelectedText=t.isShowAllSelectedText||!1,this.searchFromApi=t.searchFromApi||!1,this.required=t.required||!1,this.optionsHeight=this.optionsCount*this.optionHeight+"px",(void 0===t.search&&this.multiple||this.allowNewOption)&&(this.hasSearch=!0),this.maxValues&&(this.disableSelectAll=!0)}},{key:"setDefaultProps",value:function(t){var e={valueKey:"value",labelKey:"label",descriptionKey:"description",aliasKey:"alias",optionsCount:5,noOfDisplayValues:50,optionHeight:"40px",multiple:!1,hideClearButton:!1,hasOptionDescription:!1,silentInitialValueSet:!1,disableSelectAll:!1,noOptionsText:"No options found",noSearchResultsText:"No results found",placeholder:"Select",position:"auto",zIndex:1,allowNewOption:!1,markSearchResults:!1,tooltipFontSize:"14px",tooltipAlignment:"center",tooltipMaxWidth:"300px",showSelectedOptionsFirst:!1,name:"",keepAlwaysOpen:!1,maxValues:0};return t.hasOptionDescription&&(e.optionsCount=4,e.optionHeight="60px"),Object.assign(e,t)}},{key:"setPropsFromElementAttr",value:function(t){var e=t.ele,i={multiple:"multiple",placeholder:"placeholder",name:"name","data-value-key":"valueKey","data-label-key":"labelKey","data-description-key":"descriptionKey","data-alias-key":"aliasKey","data-search":"search","data-hide-clear-button":"hideClearButton","data-has-option-description":"hasOptionDescription","data-options-count":"optionsCount","data-option-height":"optionHeight","data-position":"position","data-no-options-text":"noOptionsText","data-no-search-results-text":"noSearchResultsText","data-silent-initial-value-set":"silentInitialValueSet","data-dropbox-width":"dropboxWidth","data-z-index":"zIndex","data-no-of-display-values":"noOfDisplayValues","data-allow-new-option":"allowNewOption","data-mark-search-results":"markSearchResults","data-tooltip-font-size":"tooltipFontSize","data-tooltip-alignment":"tooltipAlignment","data-tooltip-max-width":"tooltipMaxWidth","data-show-selected-options-first":"showSelectedOptionsFirst","data-disable-select-all":"disableSelectAll","data-keep-always-open":"keepAlwaysOpen","data-max-values":"maxValues"};for(var s in i){var o=e.getAttribute(s);"multiple"!==s||""!==o&&"true"!==o||(o=!0),o&&(t[i[s]]=o)}}},{key:"setMethods",value:function(){var e=this.$ele;e.virtualSelect=this,e.value=this.multiple?[]:"",e.reset=t.reset,e.setValue=t.setValueMethod,e.setOptions=t.setOptionsMethod,e.setDisabledOptions=t.setDisabledOptionsMethod,e.toggleSelectAll=t.toggleSelectAll,e.isAllSelected=t.isAllSelected,e.addOption=t.addOptionMethod,e.getNewValue=t.getNewValueMethod,e.getDisplayValue=t.getDisplayValueMethod,e.open=t.openMethod,e.close=t.closeMethod}},{key:"setValueMethod",value:function(t,e){Array.isArray(t)||(t=[t]),t=t.map((function(t){return t||0==t?t.toString():""}));var i=[];this.options.forEach((function(e){-1===t.indexOf(e.value)||e.isDisabled||e.isGroupTitle?e.isSelected=!1:(e.isSelected=!0,i.push(e.value))})),this.multiple||(i=i[0]),this.beforeValueSet(),this.setValue(i,!e),this.afterValueSet()}},{key:"setOptionsMethod",value:function(t){this.setOptions(t),this.afterSetOptions()}},{key:"setDisabledOptionsMethod",value:function(t){this.setDisabledOptions(t,!0),this.setValueMethod(null),this.setVisibleOptions()}},{key:"setDisabledOptions",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t=t.map((function(t){return t.toString()})),this.disabledOptions=t,e&&t.length&&this.options.forEach((function(e){return e.isDisabled=-1!==t.indexOf(e.value),e}))}},{key:"setOptions",value:function(t){t||(t=[]);var e=[],i=this.disabledOptions,s=i.length,o=this.valueKey,n=this.labelKey,l=this.descriptionKey,a=this.aliasKey,r=this.hasOptionDescription,u=this.getString,h=this.getAlias,c=0,p=!1;t.forEach((function t(d){var v=u(d[o]),f=d.options,g=!!f,y={index:c,value:v,label:u(d[n]),alias:h(d[a]),isVisible:!0,isGroupTitle:g};if(s&&(y.isDisabled=-1!==i.indexOf(v)),d.isGroupOption&&(y.isGroupOption=!0,y.groupIndex=d.groupIndex),r&&(y.description=u(d[l])),e.push(y),c++,g){var O=y.index;p=!0,f.forEach((function(e){e.isGroupOption=!0,e.groupIndex=O,t(e)}))}})),this.options=e,this.visibleOptionsCount=e.length,this.lastOptionIndex=this.options.length-1,this.newValues=[],this.hasOptionGroup=p,this.setSortedOptions()}},{key:"setSortedOptions",value:function(){var t=n(this.options);this.showSelectedOptionsFirst&&this.selectedValues.length&&(t=this.hasOptionGroup?this.sortOptionsGroup(t):this.sortOptions(t)),this.sortedOptions=t}},{key:"setVisibleOptions",value:function(){var t=n(this.sortedOptions),e=2*this.optionsCount,i=this.getVisibleStartIndex(),s=this.getNewOption(),o=i+e-1,l=0;s&&(s.visibleIndex=l,l++),t=t.filter((function(t){var e=!1;return t.isVisible&&!t.isCurrentNew&&(e=l>=i&&l<=o,t.visibleIndex=l,l++),e})),s&&(t=[s].concat(n(t))),this.visibleOptions=t,this.renderOptions()}},{key:"setOptionsPosition",value:function(t){void 0===t&&(t=this.getVisibleStartIndex());var e=t*this.optionHeight;this.$options.style.transform="translate3d(0, ".concat(e,"px, 0)"),this.setData(this.$options,"top",e)}},{key:"setOptionsTooltip",value:function(){var t=this,e=this.getVisibleOptions(),i=this.hasOptionDescription;e.forEach((function(e){var s=t.$dropbox.querySelector('.vscomp-option[data-index="'.concat(e.index,'"]'));t.setData(s.querySelector(".vscomp-option-text"),"tooltip",e.label),i&&t.setData(s.querySelector(".vscomp-option-description"),"tooltip",e.description)}))}},{key:"setValue",value:function(t,e){t?Array.isArray(t)?this.selectedValues=n(t):this.selectedValues=[t]:this.selectedValues=[];var i=this.multiple?this.selectedValues:this.selectedValues[0]||"";this.$ele.value=i,this.$hiddenInput.value=i,this.isMaxValuesSelected=!!(this.maxValues&&this.maxValues<=this.selectedValues.length),this.setValueText(),this.toggleClass(this.$wrapper,"has-value",this.isNotEmpty(this.selectedValues)),this.toggleClass(this.$wrapper,"max-value-selected",this.isMaxValuesSelected),e&&this.dispatchEvent(this.$ele,"change")}},{key:"setValueText",value:function(){var t=[],e=[],i=this.selectedValues,s=i.length,n=this.noOfDisplayValues,l=0;if(this.isAllSelected&&this.isShowAllSelectedText)this.$valueText.innerHTML="All (".concat(s,")");else{var a,r=o(this.options);try{for(r.s();!(a=r.n()).done;){var u=a.value;if(!u.isCurrentNew){if(l>50)break;var h=u.value;if(-1!==i.indexOf(h)){var c=u.label;t.push(c),++l<=n&&e.push('<span class="vscomp-value-tag">'.concat(c,"</span>"))}}}}catch(t){r.e(t)}finally{r.f()}var p=s-n;p>0&&e.push('<span class="vscomp-value-tag more-value-count">+ '.concat(p," more...</span>"));var d=t.join(", ");if(""===d)this.$valueText.innerHTML=this.placeholder;else if(this.$valueText.innerHTML=d,this.multiple){var v=this.maxValues;if(this.hasEllipsis(this.$valueText)||v){var f="".concat(s);v&&(f+=" / ".concat(v)),this.$valueText.innerHTML="".concat(f," option").concat(1===s?"":"s"," selected")}else e=[]}}this.setData(this.$valueText,"tooltip",e.join(", "))}},{key:"setSearchValue",value:function(t,e){if(t!==this.searchValueOriginal){e||(this.$searchInput.value=t);var i,s=t.toLowerCase().trim(),o=0,n=!1,l=this.isOptionVisible;this.searchValue=s,this.searchValueOriginal=t,this.hasOptionGroup&&(i=this.getVisibleOptionGroupsMapping(s)),this.options.forEach((function(t){if(!t.isCurrentNew){var e=l(t,s,n,i);e.isVisible&&o++,n||(n=e.hasExactOption)}})),this.allowNewOption&&(s&&!n?(this.setNewOption(),o++):this.removeNewOption()),this.visibleOptionsCount=o,this.toggleClass(this.$wrapper,"has-search-value",t),this.scrollToTop(),this.setOptionsHeight(),this.setVisibleOptions()}}},{key:"setOptionProp",value:function(t,e,i){this.options[t]&&(this.options[t][e]=i)}},{key:"setOptionsHeight",value:function(){this.$optionsList.style.height=this.optionHeight*this.visibleOptionsCount+"px"}},{key:"setDropboxPosition",value:function(){if("auto"===this.position){var t=this.getMoreVisibleSides(this.$wrapper),e=!1;if(this.dropboxWidth){var i=this.$toggleButton.getBoundingClientRect(),s=window.innerWidth,o=parseFloat(this.dropboxWidth),n=i.left+o>s,l=o>i.right;n&&!l&&(e=!0)}this.toggleClass(this.$wrapper,"position-top","top"===t.vertical),this.toggleClass(this.$wrapper,"position-left",e)}}},{key:"setNewOption",value:function(){var t=this.searchValueOriginal.trim();if(t){var e=this.getNewOption();if(e){var i=e.index;this.setOptionProp(i,"value",t),this.setOptionProp(i,"label",t)}else{var s={value:t,label:t,isCurrentNew:!0};this.addOption(s)}}}},{key:"getVisibleOptions",value:function(){return this.visibleOptions||[]}},{key:"getValue",value:function(){return this.multiple?this.selectedValues:this.selectedValues[0]}},{key:"getFirstVisibleOptionIndex",value:function(){return Math.ceil(this.$optionsContainer.scrollTop/this.optionHeight)}},{key:"getVisibleStartIndex",value:function(){var t=this.getFirstVisibleOptionIndex()-this.halfOptionsCount;return t<0&&(t=0),t}},{key:"getTooltipAttrText",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s={"data-tooltip":t||"","data-tooltip-enter-delay":this.tooltipEnterDelay,"data-tooltip-z-index":this.zIndex,"data-tooltip-font-size":this.tooltipFontSize,"data-tooltip-alignment":this.tooltipAlignment,"data-tooltip-max-width":this.tooltipMaxWidth,"data-tooltip-ellipsis-only":e,"data-tooltip-allow-html":i};return this.getAttributesText(s)}},{key:"getOptionObj",value:function(t){if(t){var e=this.getString;return{index:t.index,value:e(t.value),label:e(t.label),description:e(t.description),alias:this.getAlias(t.alias),isCurrentNew:t.isCurrentNew||!1,isVisible:!0}}}},{key:"getNewOption",value:function(){var t=this.options[this.lastOptionIndex];if(t&&t.isCurrentNew)return t}},{key:"getOptionIndex",value:function(t){var e;return t&&this.options.some((function(i){if(i.value==t)return e=i.index,!0})),e}},{key:"getNewValue",value:function(){var t=this.newValues,e=this.selectedValues.filter((function(e){return-1!==t.indexOf(e)}));return this.multiple?e:e[0]}},{key:"getAlias",value:function(t){return t=t?(t=Array.isArray(t)?t.join(","):t.toString().trim()).toLowerCase():""}},{key:"getDisplayValue",value:function(){var t,e=[],i=this.selectedValues,s=o(this.options);try{for(s.s();!(t=s.n()).done;){var n=t.value;-1!==i.indexOf(n.value)&&e.push(n.label)}}catch(t){s.e(t)}finally{s.f()}return this.multiple?e:e[0]||""}},{key:"getVisibleOptionGroupsMapping",value:function(t){var e=this.options,i={},s=this.isOptionVisible;return(e=this.structureOptionGroup(e)).forEach((function(e){i[e.index]=e.options.some((function(e){return s(e,t).isVisible}))})),i}},{key:"openDropbox",value:function(t){var e=this;this.setDropboxPosition(),this.removeClass(this.$wrapper,"closed"),setTimeout((function(){e.addClass(e.$wrapper,"opened"),t||(e.moveSelectedOptionsFirst(),e.addClass(e.$wrapper,"focused"),e.focusSearchInput())}),0)}},{key:"closeDropbox",value:function(t){var e=this;if(this.keepAlwaysOpen)this.removeOptionFocus();else{var i=t?0:this.transitionDuration;setTimeout((function(){e.removeClass(e.$wrapper,"opened focused"),e.removeOptionFocus()}),0),setTimeout((function(){e.addClass(e.$wrapper,"closed")}),i)}}},{key:"moveSelectedOptionsFirst",value:function(){this.showSelectedOptionsFirst&&(this.setSortedOptions(),this.$optionsContainer.scrollTop&&this.selectedValues.length?this.scrollToTop():this.setVisibleOptions())}},{key:"toggleDropbox",value:function(){this.isOpened()?this.closeDropbox():this.openDropbox()}},{key:"isOpened",value:function(){return this.hasClass(this.$wrapper,"opened")}},{key:"focusSearchInput",value:function(){var t=this.$searchInput;t&&t.focus()}},{key:"focusOption",value:function(t,e){var i,s=this.$dropbox.querySelector(".vscomp-option.focused");if(e)i=e;else if(s)i=this.getSibling(s,t);else{var o=this.getFirstVisibleOptionIndex();i=this.$dropbox.querySelector('.vscomp-option[data-visible-index="'.concat(o,'"]')),(this.hasClass(i,"disabled")||this.hasClass(i,"group-title"))&&(i=this.getSibling(i,"next"))}i&&i!==s&&(s&&this.removeClass(s,"focused"),this.addClass(i,"focused"),this.toggleFocusedProp(this.getData(i,"index"),!0),this.moveFocusedOptionToView(i))}},{key:"moveFocusedOptionToView",value:function(t){if(t||(t=this.$dropbox.querySelector(".vscomp-option.focused")),t){var e,i=this.$optionsContainer.getBoundingClientRect(),s=t.getBoundingClientRect(),o=i.top,n=i.bottom,l=i.height,a=s.top,r=s.bottom,u=s.height,h=t.offsetTop,c=this.getData(this.$options,"top","number");o>a?e=h+c:n<r&&(e=h-l+u+c),void 0!==e&&(this.$optionsContainer.scrollTop=e)}}},{key:"removeOptionFocus",value:function(){var t=this.$dropbox.querySelector(".vscomp-option.focused");t&&(this.removeClass(t,"focused"),this.toggleFocusedProp(null))}},{key:"selectOption",value:function(t){if(t){var e=!this.hasClass(t,"selected");if(e){if(this.multiple&&this.isMaxValuesSelected)return}else if(!this.multiple)return void this.closeDropbox();var i=this.selectedValues,s=this.getData(t,"value"),o=this.getData(t,"index");if(this.toggleSelectedProp(o,e),e){if(this.multiple)i.push(s),this.toggleAllOptionsClass();else{i.length&&this.toggleSelectedProp(this.getOptionIndex(i[0]),!1),i=[s];var n=this.$ele.querySelector(".vscomp-option.selected");n&&this.toggleClass(n,"selected",!1),this.closeDropbox()}this.toggleClass(t,"selected")}else this.multiple&&(this.toggleClass(t,"selected"),this.removeItemFromArray(i,s),this.toggleAllOptionsClass(!1));this.hasClass(t,"current-new")&&this.beforeSelectNewValue(),this.setValue(i,!0)}}},{key:"selectFocusedOption",value:function(){this.selectOption(this.$dropbox.querySelector(".vscomp-option.focused"))}},{key:"toggleAllOptions",value:function(t){if(this.multiple&&!this.disableSelectAll){"boolean"!=typeof t&&(t=!this.hasClass(this.$toggleAllOptions,"checked"));var e=[];this.options.forEach((function(i){i.isDisabled||i.isCurrentNew||i.isGroupTitle||(i.isSelected=t,t&&e.push(i.value))})),this.toggleAllOptionsClass(t),this.setValue(e,!0),this.renderOptions()}}},{key:"toggleAllOptionsClass",value:function(t){"boolean"!=typeof t&&(t=!1,this.options.length&&(t=!this.options.some((function(t){return!t.isSelected&&!t.isDisabled&&!t.isGroupTitle})))),this.toggleClass(this.$toggleAllOptions,"checked",t),this.isAllSelected=t}},{key:"toggleFocusedProp",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.focusedOptionIndex&&this.setOptionProp(this.focusedOptionIndex,"isFocused",!1),this.setOptionProp(t,"isFocused",e),this.focusedOptionIndex=t}},{key:"toggleSelectedProp",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.setOptionProp(t,"isSelected",e)}},{key:"scrollToTop",value:function(){var t=!this.isOpened();t&&this.openDropbox(!0),this.$optionsContainer.scrollTop>0&&(this.$optionsContainer.scrollTop=0),t&&this.closeDropbox(!0)}},{key:"reset",value:function(){this.options.forEach((function(t){t.isSelected=!1})),this.beforeValueSet(!0),this.setValue(null,!0),this.afterValueSet()}},{key:"beforeValueSet",value:function(t){this.toggleAllOptionsClass(!t&&void 0)}},{key:"afterValueSet",value:function(){this.scrollToTop(),this.setSearchValue(""),this.renderOptions()}},{key:"afterSetOptions",value:function(){this.setOptionsHeight(),this.setVisibleOptions(),this.reset()}},{key:"addOption",value:function(t,e){if(t){this.lastOptionIndex++,t.index=this.lastOptionIndex;var i=this.getOptionObj(t);this.options.push(i),this.sortedOptions.push(i),e&&(this.visibleOptionsCount++,this.afterSetOptions())}}},{key:"removeOption",value:function(t){(t||0==t)&&(this.options.splice(t,1),this.lastOptionIndex--)}},{key:"removeNewOption",value:function(){var t=this.getNewOption();t&&this.removeOption(t.index)}},{key:"beforeSelectNewValue",value:function(){var t=this,e=this.getNewOption(),i=e.index;this.newValues.push(e.value),this.setOptionProp(i,"isCurrentNew",!1),this.setOptionProp(i,"isNew",!0),setTimeout((function(){t.setSearchValue(""),t.focusSearchInput()}),0)}},{key:"sortOptions",value:function(t){return t.sort((function(t,e){return t.isSelected||e.isSelected?t.isSelected&&(!e.isSelected||t.index<e.index)?-1:1:0}))}},{key:"sortOptionsGroup",value:function(t){var e=this.sortOptions;return(t=this.structureOptionGroup(t)).forEach((function(t){var i=t.options;t.isSelected=i.some((function(t){return t.isSelected})),t.isSelected&&e(i)})),e(t),this.destructureOptionGroup(t)}},{key:"isOptionVisible",value:function(t,e,i,s){var o=t.label.toLowerCase(),n=t.description,l=t.alias,a=-1!==o.indexOf(e);return t.isGroupTitle&&(a=s[t.index]),l&&!a&&(a=-1!==l.indexOf(e)),n&&!a&&(a=-1!==n.toLowerCase().indexOf(e)),t.isVisible=a,i||(i=o===e),{isVisible:a,hasExactOption:i}}},{key:"structureOptionGroup",value:function(t){var e=[],i={};return t.forEach((function(t){if(t.isGroupTitle){var s=[];t.options=s,i[t.index]=s,e.push(t)}})),t.forEach((function(t){t.isGroupOption&&i[t.groupIndex].push(t)})),e}},{key:"destructureOptionGroup",value:function(t){var e=[];return t.forEach((function(t){e.push(t),e=e.concat(t.options)})),e}},{key:"addClass",value:function(t,e){t&&(e=e.split(" "),this.getElements(t).forEach((function(t){var i;(i=t.classList).add.apply(i,n(e))})))}},{key:"removeClass",value:function(t,e){t&&(e=e.split(" "),this.getElements(t).forEach((function(t){var i;(i=t.classList).remove.apply(i,n(e))})))}},{key:"toggleClass",value:function(t,e,i){var s;if(t)return void 0!==i&&(i=Boolean(i)),this.getElements(t).forEach((function(t){s=t.classList.toggle(e,i)})),s}},{key:"hasClass",value:function(t,e){return!!t&&t.classList.contains(e)}},{key:"isEmpty",value:function(t){var e=!1;return t?Array.isArray(t)?0===t.length&&(e=!0):"object"===s(t)&&0===Object.keys(t).length&&(e=!0):e=!0,e}},{key:"isNotEmpty",value:function(t){return!this.isEmpty(t)}},{key:"setData",value:function(t,e,i){t&&(t.dataset[e]=i)}},{key:"getStyleText",value:function(t,e){var i="";for(var s in t)i+="".concat(s,": ").concat(t[s],";");return i&&!e&&(i='style="'.concat(i,'"')),i}},{key:"getElements",value:function(t){if(t)return void 0===t.length&&(t=[t]),t}},{key:"getData",value:function(t,e,i){if(t){var s=t?t.dataset[e]:"";return"number"===i?s=parseFloat(s)||0:"true"===s?s=!0:"false"===s&&(s=!1),s}}},{key:"removeItemFromArray",value:function(t,e,i){if(!Array.isArray(t)||!t.length||!e)return t;i&&(t=n(t));var s=t.indexOf(e);return-1!==s&&t.splice(s,1),t}},{key:"removeArrayEmpty",value:function(t){return Array.isArray(t)&&t.length?t.filter((function(t){return!!t})):[]}},{key:"getMoreVisibleSides",value:function(t){if(!t)return{};var e=t.getBoundingClientRect(),i=window.innerWidth,s=window.innerHeight,o=e.left,n=e.top;return{horizontal:o>i-o-e.width?"left":"right",vertical:n>s-n-e.height?"top":"bottom"}}},{key:"getSibling",value:function(t,e){var i="next"===e?"nextElementSibling":"previousElementSibling";do{t&&(t=t[i])}while(this.hasClass(t,"disabled")||this.hasClass(t,"group-title"));return t}},{key:"getAttributesText",value:function(t){var e="";if(!t)return e;for(var i in t){var s=t[i];void 0!==s&&(e+=" ".concat(i,'="').concat(s,'" '))}return e}},{key:"convertToBoolean",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t=!0===t||"true"===t||!1!==t&&"false"!==t&&e}},{key:"hasEllipsis",value:function(t){return!!t&&t.scrollWidth>t.offsetWidth}},{key:"getString",value:function(t){return t||0===t?t.toString():""}}])&&r(e.prototype,i),l&&r(e,l),t}();document.addEventListener("reset",h.resetForm),window.VirtualSelect=h}},e={};function i(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,i),o.exports}i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i("./src/virtual-select.js")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,